//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cb0 : register(b6)
{
    float4  g_deltaSeconds;             // Offset:    0, size:   16
    float4  g_force;                    // Offset:   16, size:   16
}

//
// 4 local object(s)
//
StructuredBuffer g_constraints;
StructuredBuffer g_particles;
StructuredBuffer g_particles2;
RWStructuredBuffer g_out1;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 3 technique(s)
    //
    technique11 AddForce
    {
        pass P0
        {
            VertexShader = NULL;
            ComputeShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cb0
                // {
                //
                //   float4 g_deltaSeconds;             // Offset:    0 Size:    16 [unused]
                //   float4 g_force;                    // Offset:   16 Size:    16
                //
                // }
                //
                // Resource bind info for g_particles2
                // {
                //
                //   struct sParticle1
                //   {
                //       
                //       float movable;                 // Offset:    0
                //       float mass;                    // Offset:    4
                //       float4 pos;                    // Offset:    8
                //       float4 oldPos;                 // Offset:   24
                //       float4 acceleration;           // Offset:   40
                //       float4 accumulated_normal;     // Offset:   56
                //
                //   } $Element;                        // Offset:    0 Size:    72
                //
                // }
                //
                // Resource bind info for g_out1
                // {
                //
                //   struct sParticle1
                //   {
                //       
                //       float movable;                 // Offset:    0
                //       float mass;                    // Offset:    4
                //       float4 pos;                    // Offset:    8
                //       float4 oldPos;                 // Offset:   24
                //       float4 acceleration;           // Offset:   40
                //       float4 accumulated_normal;     // Offset:   56
                //
                //   } $Element;                        // Offset:    0 Size:    72
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // g_particles2                      texture  struct         r/o             t0      1 
                // g_out1                                UAV  struct         r/w             u0      1 
                // cb0                               cbuffer      NA          NA            cb6      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Input
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Output
                cs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB6[2], immediateIndexed
                dcl_resource_structured t0, 72
                dcl_uav_structured u0, 72
                dcl_input vThreadID.x
                dcl_temps 3
                dcl_thread_group 1, 1, 1
                //
                // Initial variable locations:
                //   vThreadID.x <- DTid.x; vThreadID.y <- DTid.y; vThreadID.z <- DTid.z
                //
                #line 50 "c:\Project\Cloth-Simulation\Src\ClothSim\ClothSimComputeShader\shader\cloth.fx"
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.x, vThreadID.x, l(0), t0.xxxx  // r0.x <- movable
                
                #line 51
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.y, vThreadID.x, l(4), t0.xxxx  // r0.y <- mass
                
                #line 52
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r1.x, vThreadID.x, l(40), t0.xxxx  // r1.x <- acceleration.x
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r1.y, vThreadID.x, l(44), t0.xxxx  // r1.y <- acceleration.y
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r1.z, vThreadID.x, l(48), t0.xxxx  // r1.z <- acceleration.z
                
                #line 54
                itof r0.z, l(0)
                lt r0.z, r0.z, r0.x
                if_nz r0.z
                
                #line 55
                  div r2.xyz, cb6[1].xyzx, r0.yyyy
                  add r1.xyz, r1.xyzx, r2.xyzx
                endif 
                
                #line 57
                store_structured u0.x, vThreadID.x, l(0), r0.x
                
                #line 58
                store_structured u0.x, vThreadID.x, l(4), r0.y
                
                #line 59
                itof r0.x, l(0)
                store_structured u0.x, vThreadID.x, l(40), r1.x
                store_structured u0.x, vThreadID.x, l(44), r1.y
                store_structured u0.x, vThreadID.x, l(48), r1.z
                store_structured u0.x, vThreadID.x, l(52), r0.x
                
                #line 60
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.x, vThreadID.x, l(8), t0.xxxx
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.y, vThreadID.x, l(12), t0.xxxx
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.z, vThreadID.x, l(16), t0.xxxx
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.w, vThreadID.x, l(20), t0.xxxx
                store_structured u0.x, vThreadID.x, l(8), r0.x
                store_structured u0.x, vThreadID.x, l(12), r0.y
                store_structured u0.x, vThreadID.x, l(16), r0.z
                store_structured u0.x, vThreadID.x, l(20), r0.w
                
                #line 61
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.x, vThreadID.x, l(24), t0.xxxx
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.y, vThreadID.x, l(28), t0.xxxx
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.z, vThreadID.x, l(32), t0.xxxx
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.w, vThreadID.x, l(36), t0.xxxx
                store_structured u0.x, vThreadID.x, l(24), r0.x
                store_structured u0.x, vThreadID.x, l(28), r0.y
                store_structured u0.x, vThreadID.x, l(32), r0.z
                store_structured u0.x, vThreadID.x, l(36), r0.w
                
                #line 62
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.x, vThreadID.x, l(56), t0.xxxx
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.y, vThreadID.x, l(60), t0.xxxx
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.z, vThreadID.x, l(64), t0.xxxx
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.w, vThreadID.x, l(68), t0.xxxx
                store_structured u0.x, vThreadID.x, l(56), r0.x
                store_structured u0.x, vThreadID.x, l(60), r0.y
                store_structured u0.x, vThreadID.x, l(64), r0.z
                store_structured u0.x, vThreadID.x, l(68), r0.w
                
                #line 63
                ret 
                // Approximately 43 instruction slots used
                            
            };
            GeometryShader = NULL;
            HullShader = NULL;
            DomainShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 SatisfyConstraint
    {
        pass P0
        {
            VertexShader = NULL;
            ComputeShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // Resource bind info for g_constraints
                // {
                //
                //   struct sConstraints
                //   {
                //       
                //       int p1;                        // Offset:    0
                //       int p2;                        // Offset:    4
                //       float rest_distance;           // Offset:    8
                //
                //   } $Element;                        // Offset:    0 Size:    12
                //
                // }
                //
                // Resource bind info for g_particles
                // {
                //
                //   struct sParticle1
                //   {
                //       
                //       float movable;                 // Offset:    0
                //       float mass;                    // Offset:    4
                //       float4 pos;                    // Offset:    8
                //       float4 oldPos;                 // Offset:   24
                //       float4 acceleration;           // Offset:   40
                //       float4 accumulated_normal;     // Offset:   56
                //
                //   } $Element;                        // Offset:    0 Size:    72
                //
                // }
                //
                // Resource bind info for g_out1
                // {
                //
                //   struct sParticle1
                //   {
                //       
                //       float movable;                 // Offset:    0
                //       float mass;                    // Offset:    4
                //       float4 pos;                    // Offset:    8
                //       float4 oldPos;                 // Offset:   24
                //       float4 acceleration;           // Offset:   40
                //       float4 accumulated_normal;     // Offset:   56
                //
                //   } $Element;                        // Offset:    0 Size:    72
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // g_constraints                     texture  struct         r/o             t0      1 
                // g_particles                       texture  struct         r/o             t1      1 
                // g_out1                                UAV  struct         r/w             u0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Input
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Output
                cs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_resource_structured t0, 12
                dcl_resource_structured t1, 72
                dcl_uav_structured u0, 72
                dcl_input vThreadID.x
                dcl_temps 5
                dcl_thread_group 1, 1, 1
                //
                // Initial variable locations:
                //   vThreadID.x <- DTid.x; vThreadID.y <- DTid.y; vThreadID.z <- DTid.z
                //
                #line 72 "c:\Project\Cloth-Simulation\Src\ClothSim\ClothSimComputeShader\shader\cloth.fx"
                ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r0.x, vThreadID.x, l(0), t0.xxxx  // r0.x <- i1
                
                #line 73
                ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r0.y, vThreadID.x, l(4), t0.xxxx  // r0.y <- i2
                
                #line 74
                ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r0.z, vThreadID.x, l(8), t0.xxxx  // r0.z <- rest_distance
                
                #line 76
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.w, r0.x, l(0), t1.xxxx  // r0.w <- movable1
                
                #line 77
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r1.x, r0.y, l(0), t1.xxxx  // r1.x <- movable2
                
                #line 78
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r2.x, r0.x, l(8), t1.xxxx  // r2.x <- pos1.x
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r2.y, r0.x, l(12), t1.xxxx  // r2.y <- pos1.y
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r2.z, r0.x, l(16), t1.xxxx  // r2.z <- pos1.z
                
                #line 79
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r3.x, r0.y, l(8), t1.xxxx  // r3.x <- pos2.x
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r3.y, r0.y, l(12), t1.xxxx  // r3.y <- pos2.y
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r3.z, r0.y, l(16), t1.xxxx  // r3.z <- pos2.z
                
                #line 81
                mov r1.yzw, -r2.xxyz
                add r1.yzw, r1.yyzw, r3.xxyz  // r1.y <- p1_to_p2.x; r1.z <- p1_to_p2.y; r1.w <- p1_to_p2.z
                
                #line 82
                dp3 r2.w, r1.yzwy, r1.yzwy
                sqrt r2.w, r2.w  // r2.w <- current_distance
                
                #line 83
                div r0.z, r0.z, r2.w
                mov r0.z, -r0.z
                add r0.z, r0.z, l(1.000000)
                min r0.z, r0.z, l(1.000000)
                max r0.z, r0.z, l(0.000000)
                mul r1.yzw, r0.zzzz, r1.yyzw  // r1.y <- correctionVector.x; r1.z <- correctionVector.y; r1.w <- correctionVector.z
                
                #line 84
                mul r1.yzw, r1.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)  // r1.y <- correctionVectorHalf.x; r1.z <- correctionVectorHalf.y; r1.w <- correctionVectorHalf.z
                
                #line 86
                lt r0.z, l(0.000000), r0.w
                add r4.xyz, r1.yzwy, r2.xyzx
                movc r2.xyz, r0.zzzz, r4.xyzx, r2.xyzx  // r2.x <- cpos1.x; r2.y <- cpos1.y; r2.z <- cpos1.z
                
                #line 87
                lt r0.z, l(0.000000), r1.x
                mov r1.xyz, -r1.yzwy
                add r1.xyz, r1.xyzx, r3.xyzx
                movc r1.xyz, r0.zzzz, r1.xyzx, r3.xyzx  // r1.x <- cpos2.x; r1.y <- cpos2.y; r1.z <- cpos2.z
                
                #line 93
                itof r0.z, l(0)
                store_structured u0.x, r0.x, l(8), r2.x
                store_structured u0.x, r0.x, l(12), r2.y
                store_structured u0.x, r0.x, l(16), r2.z
                store_structured u0.x, r0.x, l(20), r0.z
                
                #line 94
                itof r0.x, l(0)
                store_structured u0.x, r0.y, l(8), r1.x
                store_structured u0.x, r0.y, l(12), r1.y
                store_structured u0.x, r0.y, l(16), r1.z
                store_structured u0.x, r0.y, l(20), r0.x
                
                #line 105
                ret 
                // Approximately 40 instruction slots used
                            
            };
            GeometryShader = NULL;
            HullShader = NULL;
            DomainShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 TimeStep
    {
        pass P0
        {
            VertexShader = NULL;
            ComputeShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // Resource bind info for g_particles
                // {
                //
                //   struct sParticle1
                //   {
                //       
                //       float movable;                 // Offset:    0
                //       float mass;                    // Offset:    4
                //       float4 pos;                    // Offset:    8
                //       float4 oldPos;                 // Offset:   24
                //       float4 acceleration;           // Offset:   40
                //       float4 accumulated_normal;     // Offset:   56
                //
                //   } $Element;                        // Offset:    0 Size:    72
                //
                // }
                //
                // Resource bind info for g_out1
                // {
                //
                //   struct sParticle1
                //   {
                //       
                //       float movable;                 // Offset:    0
                //       float mass;                    // Offset:    4
                //       float4 pos;                    // Offset:    8
                //       float4 oldPos;                 // Offset:   24
                //       float4 acceleration;           // Offset:   40
                //       float4 accumulated_normal;     // Offset:   56
                //
                //   } $Element;                        // Offset:    0 Size:    72
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // g_particles                       texture  struct         r/o             t1      1 
                // g_out1                                UAV  struct         r/w             u0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Input
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Output
                cs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_resource_structured t1, 72
                dcl_uav_structured u0, 72
                dcl_input vThreadID.x
                dcl_temps 7
                dcl_thread_group 1, 1, 1
                //
                // Initial variable locations:
                //   vThreadID.x <- DTid.x; vThreadID.y <- DTid.y; vThreadID.z <- DTid.z
                //
                #line 114 "c:\Project\Cloth-Simulation\Src\ClothSim\ClothSimComputeShader\shader\cloth.fx"
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.x, vThreadID.x, l(0), t1.xxxx  // r0.x <- movable
                
                #line 115
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.y, vThreadID.x, l(4), t1.xxxx  // r0.y <- mass
                
                #line 116
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r1.x, vThreadID.x, l(8), t1.xxxx  // r1.x <- pos.x
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r1.y, vThreadID.x, l(12), t1.xxxx  // r1.y <- pos.y
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r1.z, vThreadID.x, l(16), t1.xxxx  // r1.z <- pos.z
                
                #line 117
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r2.z, vThreadID.x, l(24), t1.xxxx  // r2.z <- oldPos.x
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r2.x, vThreadID.x, l(28), t1.xxxx  // r2.x <- oldPos.y
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r2.y, vThreadID.x, l(32), t1.xxxx  // r2.y <- oldPos.z
                
                #line 118
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r3.y, vThreadID.x, l(40), t1.xxxx  // r3.y <- acceleration.x
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r3.z, vThreadID.x, l(44), t1.xxxx  // r3.z <- acceleration.y
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r3.x, vThreadID.x, l(48), t1.xxxx  // r3.x <- acceleration.z
                
                #line 119
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.z, vThreadID.x, l(56), t1.xxxx  // r0.z <- accumulated_normal.x
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r0.w, vThreadID.x, l(60), t1.xxxx  // r0.w <- accumulated_normal.y
                ld_structured_indexable(structured_buffer, stride=72)(mixed,mixed,mixed,mixed) r3.w, vThreadID.x, l(64), t1.xxxx  // r3.w <- accumulated_normal.z
                
                #line 123
                itof r4.x, l(0)
                lt r4.x, r4.x, r0.x
                if_nz r4.x
                
                #line 125
                  mov r4.xyz, r1.xyzx  // r4.x <- temp.x; r4.y <- temp.y; r4.z <- temp.z
                
                #line 126
                  mov r5.xyz, -r2.zxyz
                  add r5.xyz, r1.xyzx, r5.xyzx
                  mul r5.xyz, r5.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
                  add r5.xyz, r1.xyzx, r5.xyzx
                  mul r6.xyz, r3.yzxy, l(0.001000, 0.001000, 0.001000, 0.000000)
                  mul r6.xyz, r6.xyzx, l(0.001000, 0.001000, 0.001000, 0.000000)
                  add r1.xyz, r5.xyzx, r6.xyzx
                
                #line 129
                  mov r2.xyz, r4.yzxy
                
                #line 130
                  itof r3.xyz, l(0, 0, 0, 0)
                
                #line 131
                  mov r1.w, r2.z
                  mov r1.xyzw, r1.xyzw  // r1.w <- oldPos.x
                  mov r2.zw, r3.yyyz  // r2.z <- acceleration.x; r2.w <- acceleration.y
                else   // Prior locations: r2.z <- oldPos.x; r3.y <- acceleration.x; r3.z <- acceleration.y
                  mov r1.w, r2.z
                  mov r1.xyzw, r1.xyzw  // r1.w <- oldPos.x
                  mov r2.zw, r3.yyyz  // r2.z <- acceleration.x; r2.w <- acceleration.y
                endif 
                
                #line 133
                store_structured u0.x, vThreadID.x, l(0), r0.x
                
                #line 134
                store_structured u0.x, vThreadID.x, l(4), r0.y
                
                #line 135
                itof r0.x, l(0)
                store_structured u0.x, vThreadID.x, l(8), r1.x
                store_structured u0.x, vThreadID.x, l(12), r1.y
                store_structured u0.x, vThreadID.x, l(16), r1.z
                store_structured u0.x, vThreadID.x, l(20), r0.x
                
                #line 136
                itof r0.x, l(0)
                store_structured u0.x, vThreadID.x, l(24), r1.w
                store_structured u0.x, vThreadID.x, l(28), r2.x
                store_structured u0.x, vThreadID.x, l(32), r2.y
                store_structured u0.x, vThreadID.x, l(36), r0.x
                
                #line 137
                itof r0.x, l(0)
                store_structured u0.x, vThreadID.x, l(40), r2.z
                store_structured u0.x, vThreadID.x, l(44), r2.w
                store_structured u0.x, vThreadID.x, l(48), r3.x
                store_structured u0.x, vThreadID.x, l(52), r0.x
                
                #line 138
                itof r0.x, l(0)
                store_structured u0.x, vThreadID.x, l(56), r0.z
                store_structured u0.x, vThreadID.x, l(60), r0.w
                store_structured u0.x, vThreadID.x, l(64), r3.w
                store_structured u0.x, vThreadID.x, l(68), r0.x
                
                #line 139
                ret 
                // Approximately 58 instruction slots used
                            
            };
            GeometryShader = NULL;
            HullShader = NULL;
            DomainShader = NULL;
            PixelShader = NULL;
        }

    }

}

